{
  "type": "composition",
  "npmDependencies": [
    "react-icons"
  ],
  "fileDependencies": [],
  "id": "steps",
  "file": {
    "name": "steps.tsx",
    "content": "import { Box, Steps as ChakraSteps } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport { LuCheck } from \"react-icons/lu\"\n\ninterface StepInfoProps {\n  title?: React.ReactNode\n  description?: React.ReactNode\n}\n\nexport interface StepsItemProps\n  extends Omit<ChakraSteps.ItemProps, \"title\">,\n    StepInfoProps {\n  completedIcon?: React.ReactNode\n  icon?: React.ReactNode\n}\n\nexport const StepsItem = React.forwardRef<HTMLDivElement, StepsItemProps>(\n  function StepsItem(props, ref) {\n    const { title, description, completedIcon, icon, ...rest } = props\n    return (\n      <ChakraSteps.Item {...rest} ref={ref}>\n        <ChakraSteps.Trigger>\n          <ChakraSteps.Indicator>\n            <ChakraSteps.Status\n              complete={completedIcon || <LuCheck />}\n              incomplete={icon || <ChakraSteps.Number />}\n            />\n          </ChakraSteps.Indicator>\n          <StepInfo title={title} description={description} />\n        </ChakraSteps.Trigger>\n        <ChakraSteps.Separator />\n      </ChakraSteps.Item>\n    )\n  },\n)\n\nconst StepInfo = (props: StepInfoProps) => {\n  const { title, description } = props\n\n  if (title && description) {\n    return (\n      <Box>\n        <ChakraSteps.Title>{title}</ChakraSteps.Title>\n        <ChakraSteps.Description>{description}</ChakraSteps.Description>\n      </Box>\n    )\n  }\n\n  return (\n    <>\n      {title && <ChakraSteps.Title>{title}</ChakraSteps.Title>}\n      {description && (\n        <ChakraSteps.Description>{description}</ChakraSteps.Description>\n      )}\n    </>\n  )\n}\n\ninterface StepsIndicatorProps {\n  completedIcon: React.ReactNode\n  icon?: React.ReactNode\n}\n\nexport const StepsIndicator = React.forwardRef<\n  HTMLDivElement,\n  StepsIndicatorProps\n>(function StepsIndicator(props, ref) {\n  const { icon = <ChakraSteps.Number />, completedIcon } = props\n  return (\n    <ChakraSteps.Indicator ref={ref}>\n      <ChakraSteps.Status complete={completedIcon} incomplete={icon} />\n    </ChakraSteps.Indicator>\n  )\n})\n\nexport const StepsList = ChakraSteps.List\nexport const StepsRoot = ChakraSteps.Root\nexport const StepsContent = ChakraSteps.Content\nexport const StepsCompletedContent = ChakraSteps.CompletedContent\n\nexport const StepsNextTrigger = ChakraSteps.NextTrigger\nexport const StepsPrevTrigger = ChakraSteps.PrevTrigger\n"
  },
  "component": "Steps"
}
{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [],
  "id": "alert",
  "file": {
    "name": "alert.tsx",
    "content": "import { Alert as ChakraAlert } from \"@chakra-ui/react\"\nimport * as React from \"react\"\n\nexport interface AlertProps extends Omit<ChakraAlert.RootProps, \"title\"> {\n  startElement?: React.ReactNode\n  endElement?: React.ReactNode\n  title?: React.ReactNode\n  icon?: React.ReactElement\n}\n\nexport const Alert = React.forwardRef<HTMLDivElement, AlertProps>(\n  function Alert(props, ref) {\n    const { title, children, icon, startElement, endElement, ...rest } = props\n    return (\n      <ChakraAlert.Root ref={ref} {...rest}>\n        {startElement || <ChakraAlert.Indicator>{icon}</ChakraAlert.Indicator>}\n        {children ? (\n          <ChakraAlert.Content>\n            <ChakraAlert.Title>{title}</ChakraAlert.Title>\n            <ChakraAlert.Description>{children}</ChakraAlert.Description>\n          </ChakraAlert.Content>\n        ) : (\n          <ChakraAlert.Title flex=\"1\">{title}</ChakraAlert.Title>\n        )}\n        {endElement}\n      </ChakraAlert.Root>\n    )\n  },\n)\n"
  },
  "component": "Alert"
}
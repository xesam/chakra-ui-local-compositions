{
  "type": "composition",
  "npmDependencies": [
    "react-icons"
  ],
  "fileDependencies": [],
  "id": "clipboard",
  "file": {
    "name": "clipboard.tsx",
    "content": "import type { ButtonProps, InputProps } from \"@chakra-ui/react\"\nimport {\n  Button,\n  Clipboard as ChakraClipboard,\n  IconButton,\n  Input,\n} from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport { LuCheck, LuClipboard, LuLink } from \"react-icons/lu\"\n\nconst ClipboardIcon = React.forwardRef<\n  HTMLDivElement,\n  ChakraClipboard.IndicatorProps\n>(function ClipboardIcon(props, ref) {\n  return (\n    <ChakraClipboard.Indicator copied={<LuCheck />} {...props} ref={ref}>\n      <LuClipboard />\n    </ChakraClipboard.Indicator>\n  )\n})\n\nconst ClipboardCopyText = React.forwardRef<\n  HTMLDivElement,\n  ChakraClipboard.IndicatorProps\n>(function ClipboardCopyText(props, ref) {\n  return (\n    <ChakraClipboard.Indicator copied=\"Copied\" {...props} ref={ref}>\n      Copy\n    </ChakraClipboard.Indicator>\n  )\n})\n\nexport const ClipboardLabel = React.forwardRef<\n  HTMLLabelElement,\n  ChakraClipboard.LabelProps\n>(function ClipboardLabel(props, ref) {\n  return (\n    <ChakraClipboard.Label\n      textStyle=\"sm\"\n      fontWeight=\"medium\"\n      display=\"inline-block\"\n      mb=\"1\"\n      {...props}\n      ref={ref}\n    />\n  )\n})\n\nexport const ClipboardButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  function ClipboardButton(props, ref) {\n    return (\n      <ChakraClipboard.Trigger asChild>\n        <Button ref={ref} size=\"sm\" variant=\"surface\" {...props}>\n          <ClipboardIcon />\n          <ClipboardCopyText />\n        </Button>\n      </ChakraClipboard.Trigger>\n    )\n  },\n)\n\nexport const ClipboardLink = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  function ClipboardLink(props, ref) {\n    return (\n      <ChakraClipboard.Trigger asChild>\n        <Button\n          unstyled\n          variant=\"plain\"\n          size=\"xs\"\n          display=\"inline-flex\"\n          alignItems=\"center\"\n          gap=\"2\"\n          ref={ref}\n          {...props}\n        >\n          <LuLink />\n          <ClipboardCopyText />\n        </Button>\n      </ChakraClipboard.Trigger>\n    )\n  },\n)\n\nexport const ClipboardIconButton = React.forwardRef<\n  HTMLButtonElement,\n  ButtonProps\n>(function ClipboardIconButton(props, ref) {\n  return (\n    <ChakraClipboard.Trigger asChild>\n      <IconButton ref={ref} size=\"xs\" variant=\"subtle\" {...props}>\n        <ClipboardIcon />\n        <ClipboardCopyText srOnly />\n      </IconButton>\n    </ChakraClipboard.Trigger>\n  )\n})\n\nexport const ClipboardInput = React.forwardRef<HTMLInputElement, InputProps>(\n  function ClipboardInputElement(props, ref) {\n    return (\n      <ChakraClipboard.Input asChild>\n        <Input ref={ref} {...props} />\n      </ChakraClipboard.Input>\n    )\n  },\n)\n\nexport const ClipboardRoot = ChakraClipboard.Root\n"
  },
  "component": "Clipboard"
}